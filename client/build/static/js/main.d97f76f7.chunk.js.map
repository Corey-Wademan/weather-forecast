{"version":3,"sources":["Components/CurrentWeatherComponent.js","Components/DayForecastComponent.js","Components/HourlyForecastComponent.js","Photos/party-cloudy-bg.jpg","Photos/clear-bg.jpg","Photos/cloudy-bg.jpg","Photos/rain-bg.jpg","Photos/snow-bg.jpg","Photos/thunder-bg.jpg","Photos/fog-bg.jpg","Photos/clear-bg-night.jpg","Photos/party-cloudy-bg-night.jpg","Photos/rain-bg-night.jpg","Photos/snow-bg-night.jpg","Photos/thunder-bg-night.jpg","Photos/fog-bg-night.jpg","Containers/WeatherContainer.js","App.js","index.js"],"names":["CurrentWeatherComponent","currentWeather","location","timestamp","current","dt","sunriseStamp","sunrise","sunsetStamp","sunset","stampFormatter","stamp","Date","toLocaleTimeString","hour","minute","console","log","wind_speed","wind","useEffect","degrees","x","y","r","ctx","radians","window","compass","getContext","canvas","width","height","clearRect","beginPath","strokeStyle","fillStyle","lineCap","shadowOffsetX","shadowOffsetY","shadowBlur","shadowColor","lineWidth","moveTo","lineTo","Math","cos","sin","stroke","compassDirection","wind_deg","className","round","temp","feels_like","weather","main","style","alignItems","fontSize","verticalAlign","icon","sunIcon","uvi","cloudWithRain","clouds","humidity","id","DayForecastComponent","weatherData","dayFormatter","day","date","setTime","getDay","iconHandler","Object","keys","length","daily","map","index","src","max","min","HourlyForecastComponent","hourly","pop","WeatherContainer","useState","searchTerm","setsearchTerm","setLocation","setWeatherData","background","setBackground","backgroundHandler","clear","partlyCloudy","cloudy","rain","thunder","snow","fog","clearNight","partlyCloudyNight","rainNight","thunderNight","snowNight","fogNight","handleSearch","fetch","then","res","json","result","areaData","results","formatted_address","type","name","onChange","e","target","value","placeholder","autoComplete","required","onClick","searchIcon","flip","backgroundImage","App","ReactDOM","render","exact","path","component","document","getElementById"],"mappings":"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","file":"static/js/main.d97f76f7.chunk.js","sourcesContent":["// Contains all data for current weather\r\nimport React, {useEffect} from 'react';\r\nimport '../Styles/CurrentWeatherComponent.css';\r\nimport { Icon } from '@iconify/react';\r\nimport sunIcon from '@iconify-icons/emojione/sun';\r\nimport cloudWithRain from '@iconify-icons/emojione/cloud-with-rain';\r\n\r\n\r\n\r\nconst CurrentWeatherComponent = ({ currentWeather, location }) => {\r\n    \r\n    let timestamp = currentWeather.current.dt\r\n    let sunriseStamp = currentWeather.current.sunrise\r\n    let sunsetStamp = currentWeather.current.sunset\r\n    \r\n    const stampFormatter = (stamp) => {\r\n        let newStamp = stamp * 1000\r\n        let date = new Date(newStamp);\r\n        let formattedTime = date.toLocaleTimeString([], {hour: '2-digit', minute:'2-digit'})\r\n        return formattedTime\r\n    };\r\n\r\n    const calcWindDirections = (wind) => {\r\n        if (wind >= 349 || wind <= 11) { return 'N' }\r\n        else if (wind >= 12 && wind <= 33) { return 'NNE' }\r\n        else if (wind >= 34 && wind <= 56) { return 'NE' }\r\n        else if (wind >= 57 && wind <= 78) { return 'ENE' }\r\n        else if (wind >= 79 && wind <= 101) { return 'E' }\r\n        else if (wind >= 102 && wind <= 123) { return 'ESE' }\r\n        else if (wind >= 124 && wind <=  146) { return 'SE' }\r\n        else if (wind >= 147 && wind <= 168) { return 'SSE' }\r\n        else if (wind >= 169 && wind <= 191) { return 'S' }\r\n        else if (wind >= 192 && wind <= 213) { return 'SSW' }\r\n        else if (wind >= 214 && wind <= 236) { return 'SW' }\r\n        else if (wind >= 237 && wind <= 258) { return 'WSW' }\r\n        else if (wind >= 259 && wind <= 281) { return 'W' }\r\n        else if (wind >= 282 && wind <= 303) { return 'WNW' }\r\n        else if (wind >= 304 && wind <= 326) { return 'NW' }\r\n        else if (wind >= 327 && wind <= 348) { return 'NNW' }\r\n    }\r\n    \r\n    console.log(currentWeather.current.wind_speed)\r\n\r\n    const compassDirection = (degrees) => {\r\n        let x, y, r, ctx, radians;\r\n        ctx = window.compass.getContext(\"2d\");\r\n        // add 90 so that north is up then convert to radians so arrow points in correct direction\r\n        radians = 0.0174533 * (degrees + 90);\r\n        // calc compass center\r\n        x = ctx.canvas.width / 2;\r\n        y = ctx.canvas.height / 2;\r\n        r = x * 0.37;\r\n        // clear \r\n        ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\r\n        ctx.beginPath();\r\n        // optional styling\r\n        ctx.strokeStyle = \"rgba(255,0,0,0.5)\";\r\n        ctx.fillStyle = \"rgba(255,0,0,0.5)\";\r\n        ctx.lineCap = 'round';\r\n        ctx.shadowOffsetX = 1;\r\n        ctx.shadowOffsetY = 1;\r\n        ctx.shadowBlur = 10;\r\n        ctx.shadowColor = \"rgba(0, 0, 0, 0.5)\";\r\n        // draw compass needle\r\n        ctx.lineWidth = 7;\r\n        ctx.moveTo(x, y);\r\n        ctx.lineTo(x + r * Math.cos(radians), y + r * Math.sin(radians));\r\n        ctx.stroke();\r\n        // arrow \r\n    }; \r\n\r\n    useEffect(() => {\r\n        compassDirection(currentWeather.current.wind_deg);\r\n    })\r\n\r\n    return (\r\n        <div className='currentWeatherContainer'>\r\n            <div className='location-info'>\r\n                <h2>{location} <span>|</span> {stampFormatter(timestamp)}</h2>\r\n\r\n                <div className='sun-settings'>\r\n                    <h2>Sunrise: {stampFormatter(sunriseStamp)} | Sunset: {stampFormatter(sunsetStamp)}</h2>\r\n                </div>\r\n            </div>\r\n            <div className='row'>\r\n                <div className='main'>\r\n                    <h2>{Math.round(currentWeather.current.temp)} <span>℉</span></h2>\r\n                    <h4>Feels Like: {currentWeather.current.feels_like} <span>℉</span></h4>\r\n                    <h4>{currentWeather.current.weather[0].main}</h4>\r\n                </div>\r\n\r\n                <div className='main' style={{alignItems: 'flex-start'}}>\r\n                    <h3><Icon style={{ fontSize: '2.5rem', verticalAlign: 'middle' }} icon={sunIcon} /> UV Index: {Math.round(currentWeather.current.uvi)}</h3>\r\n                    <h3><Icon style={{ fontSize: '2.5rem', verticalAlign: 'middle' }} icon={cloudWithRain} /> { currentWeather.current.clouds }%</h3>\r\n                </div>\r\n    \r\n                <div className='main'>\r\n                    <h3>Wind: {Math.round(currentWeather.current.wind_speed)}mph</h3>\r\n                    <h3>Humidity: {currentWeather.current.humidity}%</h3>\r\n                </div>\r\n                <div className='sub-main'>\r\n                    <div className='main'>\r\n                        <h3>Wind Direction</h3>\r\n                        {<h4>{calcWindDirections(currentWeather.current.wind_deg)}</h4>}\r\n                    </div>\r\n                    <canvas id=\"compass\" height='110' width='220' />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CurrentWeatherComponent\r\n","import React from 'react'\r\nimport '../Styles/DayForecast.css';\r\n\r\nconst DayForecastComponent = ({ weatherData }) => {\r\n    \r\n    \r\n    const stampFormatter = (stamp) => {\r\n        let newStamp = stamp * 1000\r\n        let date = new Date(newStamp);\r\n        let formattedTime = date.toLocaleTimeString([], {hour: '2-digit', minute:'2-digit'})\r\n        return formattedTime\r\n    };\r\n\r\n    \r\n    const dayFormatter = (day) => {\r\n        const days = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\r\n        var date = new Date();\r\n        date.setTime(day*1000);\r\n        return day = days[date.getDay()];\r\n    }\r\n\r\n    const iconHandler = (icon) => {\r\n        let url;\r\n        //Day Icons\r\n        if (Object.keys(weatherData).length > 0) {\r\n            if (icon === '01d') {\r\n                return url = 'http://openweathermap.org/img/wn/01d@2x.png'\r\n            } else if (icon === '02d') {\r\n                return url = 'http://openweathermap.org/img/wn/02d@2x.png'\r\n            } else if (icon === '04d') {\r\n                return url = 'http://openweathermap.org/img/wn/04d@2x.png'\r\n            } else if (icon === '03d') {\r\n                return url = 'http://openweathermap.org/img/wn/03d@2x.png'\r\n            } else if (icon === '09d') {\r\n                return url = 'http://openweathermap.org/img/wn/09d@2x.png'\r\n            } else if (icon === '10d') {\r\n                return url = 'http://openweathermap.org/img/wn/10d@2x.png'\r\n            } else if (icon === '11d') {\r\n                return url = 'http://openweathermap.org/img/wn/11d@2x.png'\r\n            } else if (icon === '13d') {\r\n                return url = 'http://openweathermap.org/img/wn/13d@2x.png'\r\n            } else if (icon === '50d') {\r\n                return url = 'http://openweathermap.org/img/wn/50d@2x.png'\r\n            }\r\n            // Night Icons \r\n            else if (icon === '01n') {\r\n                return url = 'http://openweathermap.org/img/wn/01n@2x.png'\r\n            } else if (icon === '02n') {\r\n                return url = 'http://openweathermap.org/img/wn/02n@2x.png'\r\n            } else if (icon === '04n') {\r\n                return url = 'http://openweathermap.org/img/wn/04n@2x.png'\r\n            } else if (icon === '03n') {\r\n                return url = 'http://openweathermap.org/img/wn/03n@2x.png'\r\n            } else if (icon === '09n') {\r\n                return url = 'http://openweathermap.org/img/wn/09n@2x.png'\r\n            } else if (icon === '10n') {\r\n                return url = 'http://openweathermap.org/img/wn/10n@2x.png'\r\n            } else if (icon === '11n') {\r\n                return url = 'http://openweathermap.org/img/wn/11n@2x.png'\r\n            } else if (icon === '13n') {\r\n                return url = 'http://openweathermap.org/img/wn/13n@2x.png'\r\n            } else if (icon === '50n') {\r\n                return url = 'http://openweathermap.org/img/wn/50n@2x.png'\r\n            }\r\n        }\r\n    }\r\n\r\n    return ( \r\n        <div className='dayForecastComponent'>\r\n            {weatherData.daily.map((day, index) => {\r\n                console.log(day);\r\n                return (\r\n                <div key={index} className='day'>\r\n                    <h3>{dayFormatter(day.dt)}</h3>\r\n                    <img src={iconHandler(day.weather[0].icon)} />\r\n                    <div className='dayHighLow'>\r\n                        <h4>{Math.round(day.temp.max)}°</h4>\r\n                        <h4>{Math.round(day.temp.min)}°</h4>\r\n                    </div>\r\n                    <div className='sun-settings'>\r\n                        <h4>☀️{ stampFormatter(day.sunrise) }</h4>\r\n                        <h4>🌙{ stampFormatter(day.sunset) }</h4>\r\n                    </div>\r\n                </div>\r\n                )\r\n            })}\r\n        </div>\r\n    )\r\n}\r\nexport default DayForecastComponent\r\n","import React from 'react'\r\nimport '../Styles/HourlyForecast.css';\r\n\r\n\r\nconst HourlyForecastComponent = ({ weatherData }) => {\r\n    \r\n    \r\n    \r\n    const stampFormatter = (stamp) => {\r\n        let newStamp = stamp * 1000\r\n        let date = new Date(newStamp);\r\n        let formattedTime = date.toLocaleTimeString([], {hour: '2-digit', minute:'2-digit'})\r\n        return formattedTime\r\n    };\r\n\r\n    const calcWindDirections = (wind) => {\r\n        if (wind >= 349 || wind <= 11) { return 'N' }\r\n        else if (wind >= 12 && wind <= 33) { return 'NNE' }\r\n        else if (wind >= 34 && wind <= 56) { return 'NE' }\r\n        else if (wind >= 57 && wind <= 78) { return 'ENE' }\r\n        else if (wind >= 79 && wind <= 101) { return 'E' }\r\n        else if (wind >= 102 && wind <= 123) { return 'ESE' }\r\n        else if (wind >= 124 && wind <=  146) { return 'SE' }\r\n        else if (wind >= 147 && wind <= 168) { return 'SSE' }\r\n        else if (wind >= 169 && wind <= 191) { return 'S' }\r\n        else if (wind >= 192 && wind <= 213) { return 'SSW' }\r\n        else if (wind >= 214 && wind <= 236) { return 'SW' }\r\n        else if (wind >= 237 && wind <= 258) { return 'WSW' }\r\n        else if (wind >= 259 && wind <= 281) { return 'W' }\r\n        else if (wind >= 282 && wind <= 303) { return 'WNW' }\r\n        else if (wind >= 304 && wind <= 326) { return 'NW' }\r\n        else if (wind >= 327 && wind <= 348)  { return 'NNW' }\r\n    }\r\n\r\n\r\n    return (\r\n        <div className='hourlyForecastComponent'>\r\n            {weatherData.hourly.map((hour, index) => {\r\n                console.log(hour);\r\n                return (\r\n                <div key={index} className='hour'>\r\n                    <h3>{stampFormatter(hour.dt)}</h3>\r\n                    {/* Icon */}\r\n                    <h3>{Math.round(hour.temp)}°</h3>\r\n                        <div className='bottom-section'>\r\n                            <h4>🌧️<br />{hour.pop * 100}%</h4>\r\n                            <h4>☀️<br />{Math.round(hour.uvi)}</h4>\r\n                            <h4>{Math.round(hour.wind_speed)}mph <br /> {calcWindDirections(hour.wind_deg)} </h4>\r\n                        </div>\r\n                </div>\r\n                )\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HourlyForecastComponent\r\n","export default __webpack_public_path__ + \"static/media/party-cloudy-bg.f67cba13.jpg\";","export default __webpack_public_path__ + \"static/media/clear-bg.ef2b72ad.jpg\";","export default __webpack_public_path__ + \"static/media/cloudy-bg.e3f674e3.jpg\";","export default __webpack_public_path__ + \"static/media/rain-bg.66c0f456.jpg\";","export default __webpack_public_path__ + \"static/media/snow-bg.197817a3.jpg\";","export default __webpack_public_path__ + \"static/media/thunder-bg.a5493e59.jpg\";","export default __webpack_public_path__ + \"static/media/fog-bg.6be37694.jpg\";","export default __webpack_public_path__ + \"static/media/clear-bg-night.3d6672f7.jpg\";","export default __webpack_public_path__ + \"static/media/party-cloudy-bg-night.8e43ead0.jpg\";","export default __webpack_public_path__ + \"static/media/rain-bg-night.ce6fd88f.jpg\";","export default __webpack_public_path__ + \"static/media/snow-bg-night.15b00d03.jpg\";","export default __webpack_public_path__ + \"static/media/thunder-bg-night.e9c8ed4c.jpg\";","export default __webpack_public_path__ + \"static/media/fog-bg-night.3649bb76.jpg\";","// Contains The Apps State - Passes down to Forecast & Current Weather Container\r\nimport React, {useState, useEffect} from 'react';\r\nimport CurrentWeatherComponent from '../Components/CurrentWeatherComponent';\r\nimport DayForecastComponent from '../Components/DayForecastComponent';\r\nimport HourlyForecastComponent from '../Components/HourlyForecastComponent';\r\n\r\n\r\nimport '../Styles/WeatherContainer.css';\r\nimport { Icon } from '@iconify/react';\r\nimport searchIcon from '@iconify-icons/iwwa/search';\r\n// Day Backgrounds\r\nimport partlyCloudy from '../Photos/party-cloudy-bg.jpg';\r\nimport clear from '../Photos/clear-bg.jpg'\r\nimport cloudy from '../Photos/cloudy-bg.jpg'\r\nimport rain from '../Photos/rain-bg.jpg'\r\nimport snow from '../Photos/snow-bg.jpg'\r\nimport thunder from '../Photos/thunder-bg.jpg'\r\nimport fog from '../Photos/fog-bg.jpg'\r\n// Night Backgrounds\r\nimport clearNight from '../Photos/clear-bg-night.jpg';\r\nimport partlyCloudyNight from '../Photos/party-cloudy-bg-night.jpg';\r\nimport rainNight from '../Photos/rain-bg-night.jpg';\r\nimport snowNight from '../Photos/snow-bg-night.jpg';\r\nimport thunderNight from '../Photos/thunder-bg-night.jpg';\r\nimport fogNight from '../Photos/fog-bg-night.jpg';\r\n\r\n\r\n\r\nconst WeatherContainer = () => {\r\n    const [searchTerm, setsearchTerm] = useState()\r\n    const [location, setLocation] = useState('');\r\n    const [weatherData, setWeatherData] = useState({});\r\n    const [loading, setLoading] = useState(false);\r\n    const [background, setBackground] = useState('')\r\n    \r\n    const handleInput = (e) => {\r\n        setsearchTerm(e.target.value);\r\n    }\r\n\r\n    // Dynamically changes background depending on current weather\r\n    const backgroundHandler = () => {\r\n        // Day Backgrounds\r\n        if (Object.keys(weatherData).length > 0) {\r\n            if (weatherData.current.weather[0].icon === '01d') {\r\n                setBackground(clear)\r\n            } else if (weatherData.current.weather[0].icon === '02d' || weatherData.current.weather[0].icon === '04d' ) {\r\n                setBackground(partlyCloudy)\r\n            } else if (weatherData.current.weather[0].icon === '03d') {\r\n                setBackground(cloudy)\r\n            } else if (weatherData.current.weather[0].icon === '09d' || weatherData.current.weather[0].icon === '10d') {\r\n                setBackground(rain)\r\n            } else if (weatherData.current.weather[0].icon === '11d') {\r\n                setBackground(thunder)\r\n            } else if (weatherData.current.weather[0].icon === '13d') {\r\n                setBackground(snow)\r\n            } else if (weatherData.current.weather[0].icon === '50d') {\r\n                setBackground(fog)\r\n            }\r\n            // Night Backgrounds \r\n            else if (weatherData.current.weather[0].icon === '01n') {\r\n                setBackground(clearNight)\r\n            } else if (weatherData.current.weather[0].icon === '02n' || weatherData.current.weather[0].icon === '04n' ) {\r\n                setBackground(partlyCloudyNight)\r\n            } else if (weatherData.current.weather[0].icon === '03n') {\r\n                setBackground(partlyCloudyNight)\r\n            } else if (weatherData.current.weather[0].icon === '09n' || weatherData.current.weather[0].icon === '10n') {\r\n                setBackground(rainNight)\r\n            } else if (weatherData.current.weather[0].icon === '11n') {\r\n                setBackground(thunderNight)\r\n            } else if (weatherData.current.weather[0].icon === '13n') {\r\n                setBackground(snowNight)\r\n            } else if (weatherData.current.weather[0].icon === '50n') {\r\n                setBackground(fogNight)\r\n            }\r\n        }\r\n    };\r\n    \r\n    const handleSearch = () => {\r\n        fetch(`/weather/${searchTerm}`)\r\n            .then(res => { return res.json() })\r\n            .then(result => {\r\n                setWeatherData(result.weatherData)\r\n                setLocation(result.areaData.results[0].formatted_address)\r\n            })\r\n       backgroundHandler();\r\n    };\r\n\r\n    useEffect(() => {\r\n        backgroundHandler();\r\n    }, [handleSearch]);\r\n\r\n    return (\r\n        <div id='container'>\r\n            <div className='bar'>\r\n                    <input className='searchbar' type='text' name='searchTerm' onChange={handleInput} placeholder='Enter City & State' autoComplete='off' required/>\r\n                    <button className='search-btn' onClick={handleSearch} type='submit' value='submit' name='button'>\r\n                        <Icon icon={searchIcon} flip=\"horizontal\" />\r\n                    </button>\r\n            </div>\r\n            \r\n            \r\n                {Object.keys(weatherData).length > 0\r\n                    ? <div className='weather-container' style={{backgroundImage: `url(${background})`}}>\r\n                            <CurrentWeatherComponent\r\n                                location={location}\r\n                                currentWeather={weatherData}/>\r\n                            <HourlyForecastComponent weatherData={weatherData} />\r\n                            <DayForecastComponent weatherData={weatherData} />\r\n                        </div> \r\n                    : <></>\r\n                }\r\n             \r\n        </div>\r\n    )\r\n\r\n};\r\n\r\nexport default WeatherContainer;","import React from 'react'\nimport WeatherContainer from './Containers/WeatherContainer';\n\nconst App = () => {\n  return (\n    <>\n    <WeatherContainer />\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\n\nimport App from './App';\nimport WeatherContainer from './Containers/WeatherContainer';\n\nReactDOM.render(\n  <Router>\n    <App>\n      <Route exact path='/' component={WeatherContainer} />\n    </App>\n  </Router>\n  ,document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}